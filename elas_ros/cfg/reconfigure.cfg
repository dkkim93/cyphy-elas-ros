#!/usr/bin/env python
PACKAGE = "elas_ros"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("disp_min",              int_t,    0, "min disparity",          5,  0, 255)
gen.add("disp_max",              int_t,    0, "max disparity",          255,  0, 255)
gen.add("support_th",            double_t, 0, "support threshold",      0.8,  0, 1)
gen.add("support_texture",       int_t,    0, "support texture",        10,  0, 20)
gen.add("candidate_stepsize",    int_t,    0, "candidate stepsize",     5,  0, 30)
gen.add("incon_window_size",     int_t,    0, "incon window size",      5,  0, 30)
gen.add("incon_th",              int_t,    0, "incon window threshold", 5,  0, 30)
gen.add("incon_min_support",     int_t,    0, "incon min support",      5,  0, 30)
gen.add("add_corners",           bool_t,   0, "add corners",            False)
gen.add("grid_size",             int_t,    0, "grid size",              20,  1, 50)
gen.add("beta",                  double_t, 0, "beta",                   0.02,  0, 1)
gen.add("gamma",                 double_t, 0, "gamma",                  3,  0, 10)
gen.add("sigma",                 double_t, 0, "sigma",                  1,  0, 10)
gen.add("sradius",               double_t, 0, "sradius",                2,  0, 10)
gen.add("match_texture",         int_t,    0, "match texture",          1,  0, 50)
gen.add("lr_th",                 int_t,    0, "lr threshold",           2,  0, 50)
gen.add("speckle_sim_th",        double_t, 0, "speckle sim threshold",  1,  0, 10)
gen.add("speckle_size",          int_t,    0, "speckle size",           200,  0, 1000)
gen.add("ipol_gap_width",        int_t,    0, "ipol gap width",         3,  0, 1000)
gen.add("filter_median",         bool_t,   0, "filter median",          False)
gen.add("filter_adaptive_mean",  bool_t,   0, "filter adaptive mean",   True)
gen.add("postprocess_only_left", bool_t,   0, "postprocess only left",  True)
gen.add("subsampling",           bool_t,   0, "subsampling",            False)

exit(gen.generate(PACKAGE, "elas_ros", "reconfigure"))
